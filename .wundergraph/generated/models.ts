// Code generated by wunderctl. DO NOT EDIT.

import type function_UsersGet from "../operations/users/get";
import type function_UsersSubscribe from "../operations/users/subscribe";
import type function_UsersUpdate from "../operations/users/update";
import type { ExtractInput, ExtractResponse } from "@wundergraph/sdk/operations";
import type { OperationErrors } from "./ts-operation-errors";
import type { GraphQLError } from "@wundergraph/sdk/client";

export type JSONValue = string | number | boolean | JSONObject | Array<JSONValue>;

export type JSONObject = { [key: string]: JSONValue };

export interface NewNoteInput {
	text: string;
}

export interface NoteByIDInput {
	id: number;
}

export type UsersGetInput = ExtractInput<typeof function_UsersGet>;

export type UsersSubscribeInput = ExtractInput<typeof function_UsersSubscribe>;

export type UsersUpdateInput = ExtractInput<typeof function_UsersUpdate>;

export interface NewNoteInputInternal {
	text: string;
}

export interface NoteByIDInputInternal {
	id: number;
}

export interface UsersGetInputInternal {
	id: string;
}

export interface UsersSubscribeInputInternal {
	id: string;
}

export interface UsersUpdateInputInternal {
	id: string;
	name: string;
	bio: string;
}

export interface NewNoteInputInjected {
	text: string;
}

export interface NoteByIDInputInjected {
	id: number;
}

export interface DragonsResponse {
	data?: DragonsResponseData;
	errors?: GraphQLError[];
}

export interface NewNoteResponse {
	data?: NewNoteResponseData;
	errors?: GraphQLError[];
}

export interface NoteByIDResponse {
	data?: NoteByIDResponseData;
	errors?: GraphQLError[];
}

export interface UsersGetResponse {
	data?: UsersGetResponseData;
	errors?: GraphQLError[];
}

export interface UsersSubscribeResponse {
	data?: UsersSubscribeResponseData;
	errors?: GraphQLError[];
}

export interface UsersUpdateResponse {
	data?: UsersUpdateResponseData;
	errors?: GraphQLError[];
}

export interface DragonsResponseData {
	spacex_dragons?: {
		name?: string;
		active?: boolean;
		id?: string;
	}[];
}

export interface NewNoteResponseData {
	notes_newNote?: {
		id?: number;
	};
}

export interface NoteByIDResponseData {
	notes_noteByID?: {
		id?: number;
		text?: string;
	};
}

export type UsersGetResponseData = ExtractResponse<typeof function_UsersGet>;

export type UsersSubscribeResponseData = ExtractResponse<typeof function_UsersSubscribe>;

export type UsersUpdateResponseData = ExtractResponse<typeof function_UsersUpdate>;
