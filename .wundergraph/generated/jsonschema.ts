// Code generated by wunderctl. DO NOT EDIT.

// @ts-ignore: no-types available
import type { JSONSchema7 } from "json-schema";

// @ts-ignore: module unavailable
declare module "json-schema" {
	export interface JSONSchema7 {
		"x-graphql-enum-name"?: string;
	}
}

export interface Queries {
	Dragons: {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	NoteByID: {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"users/get": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
}

export interface Mutations {
	NewNote: {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
	"users/update": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
}

export interface Subscriptions {
	"users/subscribe": {
		input: JSONSchema7;
		response: JSONSchema7;
		operationType: string;
		description: string;
	};
}

export type Schema = Queries & Mutations & Subscriptions;

const jsonSchema: Schema = {
	Dragons: {
		input: { type: "object", properties: {}, additionalProperties: false },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						spacex_dragons: {
							type: "array",
							items: {
								type: "object",
								properties: { name: { type: "string" }, active: { type: "boolean" }, id: { type: "string" } },
								additionalProperties: false,
							},
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	NoteByID: {
		input: { type: "object", properties: { id: { type: "integer" } }, additionalProperties: false, required: ["id"] },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						notes_noteByID: {
							type: "object",
							properties: { id: { type: "integer" }, text: { type: "string" } },
							additionalProperties: false,
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "QUERY",
		description: "",
	},
	"users/get": {
		input: {
			type: "object",
			properties: { id: { type: "string" } },
			required: ["id"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: {
			type: "object",
			properties: {
				id: { type: "string" },
				name: { type: "string", default: "Jens" },
				bio: { type: "string", default: "Founder of WunderGraph" },
			},
			required: ["bio", "id", "name"],
		},
		operationType: "QUERY",
		description: "generated/bundle/operations/users/get",
	},
	NewNote: {
		input: {
			type: "object",
			properties: { text: { type: "string" } },
			additionalProperties: false,
			required: ["text"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						notes_newNote: { type: "object", properties: { id: { type: "integer" } }, additionalProperties: false },
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
		operationType: "MUTATION",
		description: "",
	},
	"users/update": {
		input: {
			type: "object",
			properties: { id: { type: "string" }, name: { type: "string" }, bio: { type: "string" } },
			required: ["id", "name", "bio"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: {
			type: "object",
			properties: { name: { type: "string" }, id: { type: "string" }, bio: { type: "string" } },
			required: ["bio", "id", "name"],
		},
		operationType: "MUTATION",
		description: "generated/bundle/operations/users/update",
	},
	"users/subscribe": {
		input: {
			type: "object",
			properties: { id: { type: "string" } },
			required: ["id"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: {
			type: "object",
			properties: {
				id: { type: "string" },
				name: { type: "string", default: "Jens" },
				bio: { type: "string", default: "Founder of WunderGraph" },
				time: { type: "string" },
			},
			required: ["bio", "id", "name", "time"],
		},
		operationType: "SUBSCRIPTION",
		description: "generated/bundle/operations/users/subscribe",
	},
};

export type QueryNames = "Dragons" | "NoteByID" | "users/get";

export type MutationNames = "NewNote" | "users/update";

export type SubscriptionNames = "users/subscribe";

export default jsonSchema;
